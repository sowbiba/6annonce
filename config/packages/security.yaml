security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
    providers:
        app_user:
            id: app.security.user_provider.username
    role_hierarchy:
        ROLE_CLIENT: ROLE_CLIENT
        ROLE_MEMBER: ROLE_CLIENT
        ROLE_SUPER_ADMIN: ROLE_CLIENT
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: app_user
                csrf_token_generator: security.csrf.token_manager
                login_path: app_security_login
                check_path: app_security_check
                always_use_default_target_path: false
                default_target_path: app_home
            logout:
                path: app_security_logout
                target: app_security_login
            anonymous: true
            guard:
                authenticators:
                    - App\Security\Authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register/member$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register/admin$, role: ROLE_SUPER_ADMIN }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/account/, role: ROLE_MEMBER }
        - { path: ^/admin/, role: ROLE_SUPER_ADMIN }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
